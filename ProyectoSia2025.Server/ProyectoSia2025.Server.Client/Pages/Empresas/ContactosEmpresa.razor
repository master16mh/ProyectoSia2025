@page "/empresas/detalles/{id:int}"
@inject IHttpService http
@inject NavigationManager navHttp

<h3>Contactos de la Empresa</h3>
<hr />

@if (empresa == null)
{
    <p>Cargando...</p>
}
else
{
    <div class="card p-3 shadow-sm">
        <h5>@empresa.Nombre</h5>
        <p><strong>CUIT:</strong> @empresa.CUIT</p>
        <p><strong>Dirección:</strong> @empresa.Direccion</p>
        <p><strong>Razón Social:</strong> @empresa.RazonSocial</p>
    </div>

    <hr />
    <h4>Contactos Asociados</h4>

    <button class="btn btn-primary" @onclick="MostrarModalContacto">+ Agregar Contacto</button>
    <button class="btn btn-secondary" @onclick="Volver">Volver a Lista de empresas</button>

    @if (empresa.Contactos == null || empresa.Contactos.Count == 0)
    {
        <p>No hay contactos cargados.</p>
    }
    else
    {
        <table class="table table-bordered table-sm">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>DNI</th>
                    <th>Email</th>
                    <th>Teléfono</th>
                    <th>Cargo</th>  
                </tr>
            </thead>
            <tbody>
                @foreach (var c in empresa.Contactos)
                {
                    <tr>
                        <td>@c.Nombre</td>
                        <td>@c.Apellido</td>
                        <td>@c.DNI</td>
                        <td>@c.Email</td>
                        <td>@c.Telefono</td>
                        <td>@c.Cargo</td>
                    </tr>
                }
            </tbody>
        </table>
        
    }
}

<AgregarContactos @ref="modalContacto" EmpresaId="@id" OnContactoAgregado="Refrescar" />

@code {
    [Parameter] public int id { get; set; }
    EmpresaDTO? empresa;
    private AgregarContactos? modalContacto;

    protected override async Task OnInitializedAsync()
    {
        await CargarEmpresa();
    }

    private async Task CargarEmpresa()
    {
        var response = await http.Get<EmpresaDTO>($"api/Empresas/{id}");
        if (!response.Error)
        {
            empresa = response.Response;
        }
    }

    void MostrarModalContacto() => modalContacto?.Mostrar();

    async Task Refrescar()
    {
        await CargarEmpresa();
        StateHasChanged();
    }

    private async Task Volver()
    {
        navHttp.NavigateTo("/empresas");
    }
}
