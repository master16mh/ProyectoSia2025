// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoSia2025.BD;

#nullable disable

namespace ProyectoSia2025.BD.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250601215154_CorrigiendoCampoModificadoEnTablaInspeccion")]
    partial class CorrigiendoCampoModificadoEnTablaInspeccion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.CheckListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CheckLists");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Diseño", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiseñadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.Property<string>("UrlArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiseñadorId");

                    b.HasIndex("ObraId");

                    b.ToTable("Diseños");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.HistorialAccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampoModificado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistorialAcciones");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Informe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaGeneracion")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneradoPorId")
                        .HasColumnType("int");

                    b.Property<int>("InspeccionId")
                        .HasColumnType("int");

                    b.Property<string>("Resumen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TieneIrregularidades")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GeneradoPorId");

                    b.HasIndex("InspeccionId")
                        .IsUnique();

                    b.ToTable("Informes");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Inspeccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ChecklistUtilizado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaInspeccion")
                        .HasColumnType("datetime2");

                    b.Property<int>("InspectorId")
                        .HasColumnType("int");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionesGenerales")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SeGeneraInforme")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InspectorId");

                    b.HasIndex("ObraId");

                    b.ToTable("Inspecciones");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.InspeccionCheckList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChecklistItemId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InspeccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistItemId");

                    b.HasIndex("InspeccionId");

                    b.ToTable("InspeccionCheckLists");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Obra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Seguimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Corregido")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaSeguimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("InspeccionId")
                        .HasColumnType("int");

                    b.Property<int>("RealizadoPorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InspeccionId");

                    b.HasIndex("RealizadoPorId");

                    b.ToTable("Seguimientos");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaUltimoAcceso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Diseño", b =>
                {
                    b.HasOne("ProyectoSia2025.BD.Data.Entities.Usuario", "Diseñador")
                        .WithMany("DiseñosSubidos")
                        .HasForeignKey("DiseñadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProyectoSia2025.BD.Data.Entities.Obra", "Obra")
                        .WithMany("Diseños")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diseñador");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.HistorialAccion", b =>
                {
                    b.HasOne("ProyectoSia2025.BD.Data.Entities.Usuario", "Usuario")
                        .WithMany("Historial")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Informe", b =>
                {
                    b.HasOne("ProyectoSia2025.BD.Data.Entities.Usuario", "GeneradoPor")
                        .WithMany("Informes")
                        .HasForeignKey("GeneradoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProyectoSia2025.BD.Data.Entities.Inspeccion", "Inspeccion")
                        .WithOne("Informe")
                        .HasForeignKey("ProyectoSia2025.BD.Data.Entities.Informe", "InspeccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneradoPor");

                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Inspeccion", b =>
                {
                    b.HasOne("ProyectoSia2025.BD.Data.Entities.Usuario", "Inspector")
                        .WithMany("Inspecciones")
                        .HasForeignKey("InspectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProyectoSia2025.BD.Data.Entities.Obra", "Obra")
                        .WithMany("Inspecciones")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inspector");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.InspeccionCheckList", b =>
                {
                    b.HasOne("ProyectoSia2025.BD.Data.Entities.CheckListItem", "ChecklistItem")
                        .WithMany()
                        .HasForeignKey("ChecklistItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoSia2025.BD.Data.Entities.Inspeccion", "Inspeccion")
                        .WithMany("ChecklistItems")
                        .HasForeignKey("InspeccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistItem");

                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Obra", b =>
                {
                    b.HasOne("ProyectoSia2025.BD.Data.Entities.Empresa", "Empresa")
                        .WithMany("Obras")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Seguimiento", b =>
                {
                    b.HasOne("ProyectoSia2025.BD.Data.Entities.Inspeccion", "Inspeccion")
                        .WithMany("Seguimientos")
                        .HasForeignKey("InspeccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoSia2025.BD.Data.Entities.Usuario", "RealizadoPor")
                        .WithMany("Seguimientos")
                        .HasForeignKey("RealizadoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inspeccion");

                    b.Navigation("RealizadoPor");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Empresa", b =>
                {
                    b.Navigation("Obras");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Inspeccion", b =>
                {
                    b.Navigation("ChecklistItems");

                    b.Navigation("Informe")
                        .IsRequired();

                    b.Navigation("Seguimientos");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Obra", b =>
                {
                    b.Navigation("Diseños");

                    b.Navigation("Inspecciones");
                });

            modelBuilder.Entity("ProyectoSia2025.BD.Data.Entities.Usuario", b =>
                {
                    b.Navigation("DiseñosSubidos");

                    b.Navigation("Historial");

                    b.Navigation("Informes");

                    b.Navigation("Inspecciones");

                    b.Navigation("Seguimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
